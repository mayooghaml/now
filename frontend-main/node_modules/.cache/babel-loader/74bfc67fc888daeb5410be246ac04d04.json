{"ast":null,"code":"var _jsxFileName = \"E:\\\\now\\\\MERN-Assignment-frontend-main\\\\src\\\\components\\\\userAccounts\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { validateLogin } from './validateForms';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  //Storing Form Field Values\n  const [formValues, setFormValues] = useState({\n    username: \"\",\n    password: \"\"\n  }); //Manage Error Values\n\n  const [errorValues, setErrorValues] = useState({}); //for page navigation\n\n  const navigate = useNavigate(); // Manage Field Change\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  }; //Manage form submit\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let validationErrors = validateLogin(formValues);\n    setErrorValues(validationErrors);\n    if (Object.keys(validationErrors).length === 0) userLogin();\n  };\n\n  const userLogin = async () => {\n    const uname = formValues.username;\n    const password = formValues.password;\n    const response = await fetch(\"/api/user/login\", {\n      method: 'post',\n      body: JSON.stringify({\n        uname,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const body = await response.json();\n    body.uname = uname;\n    body.password = password;\n\n    if (body.uname === uname) {\n      setToken(body);\n      navigate(\"/temp.html\", {\n        replace: true\n      });\n    } else {\n      alert(\"Login Unsuccessful!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"User name\",\n        required: \"\",\n        value: formValues.username,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorText\",\n        children: errorValues.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        required: \"\",\n        value: formValues.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorText\",\n        children: errorValues.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        className: \"signupLink\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"3Mq3AUyW3W4ghAW9nkVqOW9AkdQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/now/MERN-Assignment-frontend-main/src/components/userAccounts/Login.js"],"names":["React","useState","useNavigate","Link","validateLogin","Login","setToken","formValues","setFormValues","username","password","errorValues","setErrorValues","navigate","handleChange","event","name","value","target","handleSubmit","preventDefault","validationErrors","Object","keys","length","userLogin","uname","response","fetch","method","body","JSON","stringify","headers","json","replace","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { validateLogin } from './validateForms';\nimport './Login.css';\n\nconst Login = ({setToken}) => {\n    //Storing Form Field Values\n    const [formValues, setFormValues] = useState({ username: \"\", password: \"\" });\n    //Manage Error Values\n    const [errorValues, setErrorValues] = useState({});\n    //for page navigation\n    const navigate = useNavigate();\n    // Manage Field Change\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormValues({ ...formValues, [name]: value });\n    }\n    //Manage form submit\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        let validationErrors = validateLogin(formValues);\n        setErrorValues(validationErrors);\n        if(Object.keys(validationErrors).length === 0)\n            userLogin();\n    }\n\n    const userLogin = async () => {\n        const uname = formValues.username;\n        const password = formValues.password;\n        const response = await fetch(\"/api/user/login\", {\n            method: 'post',\n            body: JSON.stringify({ uname, password }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        const body = await response.json();\n        body.uname=uname;\n        body.password=password;\n        if (body.uname === uname) {\n            setToken(body);\n            navigate(\"/temp.html\", { replace: true });\n        } else {\n            alert(\"Login Unsuccessful!\");\n        }\n    };\n\n    return (\n        <div className=\"signup\">\n            <form onSubmit={handleSubmit}>\n                <h1>Login</h1><br />\n                <input type=\"text\" name=\"username\" placeholder=\"User name\" required=\"\" value={formValues.username} onChange={handleChange} />\n                <p className=\"errorText\">{errorValues.username}</p>\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" required=\"\" value={formValues.password} onChange={handleChange} />\n                <p className=\"errorText\">{errorValues.password}</p>\n                <br />\n                <button>Login</button>\n                <Link to=\"/signup\" className=\"signupLink\">Sign up</Link>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}