{"ast":null,"code":"var _jsxFileName = \"E:\\\\now\\\\MERN-Assignment-frontend-main\\\\src\\\\components\\\\article\\\\Article.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport Comments from './Comments';\nimport Upvote from './Upvote';\nimport AddComments from './AddComments';\nimport ErrorPage from '../error/Error';\nimport \"./Article.css\";\nimport Preloader from './PreLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Article = _ref => {\n  _s();\n\n  let {\n    token\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const [articleData, setArticleData] = useState({\n    title: \"\",\n    description: \"\",\n    name: \"\",\n    upvoters: [],\n    comments: []\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchAPI();\n  }, [id]);\n\n  async function fetchAPI() {\n    const response = await fetch(`/api/posts/${id}`, {\n      method: 'get',\n      headers: {\n        'Authorization': `Bearer ${token.token}`\n      }\n    });\n    const body = await response.json();\n    if (body !== {\n      status: \"Error\"\n    }) setArticleData(body);\n    setLoading(false);\n  }\n\n  if (!articleData.title) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Preloader, {\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 50\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blogPost\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"postTitle\",\n      children: articleData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"postAuthor\",\n      children: [\"By \", articleData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Upvote, {\n      id: id,\n      setArticleData: setArticleData,\n      upvoters: articleData.upvoters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"postDescr\",\n      children: articleData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      comments: articleData.comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddComments, {\n      id: id,\n      setArticleData: setArticleData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Article, \"APUj+PSzOHaSJKNzJFV1AFuQqy0=\", false, function () {\n  return [useParams];\n});\n\n_c = Article;\nexport default Article;\n\nvar _c;\n\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"sources":["E:/now/MERN-Assignment-frontend-main/src/components/article/Article.js"],"names":["React","useEffect","useState","useParams","Comments","Upvote","AddComments","ErrorPage","Preloader","Article","token","id","articleData","setArticleData","title","description","name","upvoters","comments","loading","setLoading","fetchAPI","response","fetch","method","headers","body","json","status"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,MAAMC,OAAO,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAASR,SAAS,EAAxB;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC;AAC3CY,IAAAA,KAAK,EAAE,EADoC;AAE3CC,IAAAA,WAAW,EAAE,EAF8B;AAG3CC,IAAAA,IAAI,EAAE,EAHqC;AAI3CC,IAAAA,QAAQ,EAAE,EAJiC;AAK3CC,IAAAA,QAAQ,EAAE;AALiC,GAAD,CAA9C;AAOA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAACV,EAAD,CAFM,CAAT;;AAIA,iBAAeU,QAAf,GAA0B;AACtB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaZ,EAAG,EAAlB,EAAqB;AAC7Ca,MAAAA,MAAM,EAAE,KADqC;AAE7CC,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASf,KAAK,CAACA,KAAM;AADlC;AAFoC,KAArB,CAA5B;AAMA,UAAMgB,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,QAAID,IAAI,KAAK;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAb,EACIf,cAAc,CAACa,IAAD,CAAd;AACJN,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAGD,MAAI,CAACR,WAAW,CAACE,KAAjB,EACI,oBAAQ;AAAA,4BAAE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEK;AAApB;AAAA;AAAA;AAAA;AAAA,YAAF,eAAiC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAjC;AAAA,kBAAR;AAIJ,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBAA2BP,WAAW,CAACE;AAAvC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,wBAA+BF,WAAW,CAACI,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAEL,EAAZ;AAAgB,MAAA,cAAc,EAAEE,cAAhC;AAAgD,MAAA,QAAQ,EAAED,WAAW,CAACK;AAAtE;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAA4BL,WAAW,CAACG;AAAxC;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEH,WAAW,CAACM;AAAhC;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,WAAD;AAAa,MAAA,EAAE,EAAEP,EAAjB;AAAqB,MAAA,cAAc,EAAEE;AAArC;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA5CD;;GAAMJ,O;UACaN,S;;;KADbM,O;AA8CN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport Comments from './Comments';\nimport Upvote from './Upvote';\nimport AddComments from './AddComments';\nimport ErrorPage from '../error/Error';\nimport \"./Article.css\"\nimport Preloader from './PreLoader';\n\nconst Article = ({token}) => {\n    const { id } = useParams();\n    const [articleData, setArticleData] = useState({\n        title: \"\",\n        description: \"\",\n        name: \"\",\n        upvoters: [],\n        comments: []\n    });\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetchAPI();\n    }, [id]);\n\n    async function fetchAPI() {\n        const response = await fetch(`/api/posts/${id}`, {\n            method: 'get',\n            headers: {\n                'Authorization': `Bearer ${token.token}`\n            }\n        });\n        const body = await response.json();\n        if (body !== { status: \"Error\" })\n            setArticleData(body);\n        setLoading(false);\n    }\n\n    \n    if (!articleData.title) \n        return (<><Preloader loading={loading} /><ErrorPage /></>);\n    \n        \n   \n    return (\n        <div className=\"blogPost\">\n            <h1 className=\"postTitle\">{articleData.title}</h1>\n            <h2 className=\"postAuthor\">By {articleData.name}</h2>\n            <Upvote id={id} setArticleData={setArticleData} upvoters={articleData.upvoters} />\n            <pre className=\"postDescr\">{articleData.description}</pre>\n            <Comments comments={articleData.comments} />\n            <AddComments id={id} setArticleData={setArticleData} />\n        </div>\n    );\n};\n\nexport default Article;"]},"metadata":{},"sourceType":"module"}