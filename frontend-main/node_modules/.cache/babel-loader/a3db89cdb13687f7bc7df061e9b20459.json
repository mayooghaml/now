{"ast":null,"code":"var _jsxFileName = \"E:\\\\now\\\\MERN-Assignment-frontend-main\\\\src\\\\components\\\\post\\\\AddPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useToken from \"../userAccounts/useToken\";\nimport ErrorPage from \"../error/Error\";\nimport \"../article/Article.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPost = () => {\n  _s();\n\n  const {\n    token\n  } = useToken();\n  const [postValues, setPostValues] = useState({\n    title: \"\",\n    description: \"\",\n    name: token.uname\n  });\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setPostValues({ ...postValues,\n      [name]: value\n    });\n  }\n\n  async function fetchPost() {\n    const name = postValues.name;\n    const title = postValues.title;\n    const description = postValues.description;\n\n    if (title !== \"\" && description !== \"\") {\n      const response = await fetch(`/api/posts/post`, {\n        method: 'post',\n        body: JSON.stringify({\n          title,\n          description,\n          name\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token.token}`\n        }\n      });\n      const body = await response.json();\n\n      if (body.status === \"Success\") {\n        alert(\"Post Successful\");\n        setPostValues({\n          title: \"\",\n          description: \"\",\n          name: token.uname\n        });\n      } else {\n        alert(\"Post Unsuccessful!\");\n      }\n    } else {\n      alert(\"Enter all required fields.\");\n    }\n  }\n\n  if (!token.admin) return /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blogPost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addComment\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"commentHeading\",\n        children: \"Add a Blog Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"titleTextBox\",\n          name: \"title\",\n          value: postValues.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"20\",\n          cols: \"100\",\n          name: \"description\",\n          value: postValues.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPost,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddPost, \"mip2NoABs2aQGqJ4jFaqUmxcPKg=\", false, function () {\n  return [useToken];\n});\n\n_c = AddPost;\nexport default AddPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"sources":["E:/now/MERN-Assignment-frontend-main/src/components/post/AddPost.js"],"names":["React","useState","useToken","ErrorPage","AddPost","token","postValues","setPostValues","title","description","name","uname","handleChange","event","value","target","fetchPost","response","fetch","method","body","JSON","stringify","headers","json","status","alert","admin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport useToken from \"../userAccounts/useToken\";\nimport ErrorPage from \"../error/Error\";\nimport \"../article/Article.css\";\n\nconst AddPost = () => {\n    const { token } = useToken();\n    const [postValues, setPostValues] = useState({ title: \"\", description: \"\", name: token.uname });\n    function handleChange(event){\n        const { name, value } = event.target;\n        setPostValues({ ...postValues, [name]: value });\n    }\n    async function fetchPost() {\n        const name = postValues.name;\n        const title = postValues.title;\n        const description = postValues.description;\n\n        if (title !== \"\" && description !== \"\") {\n            const response = await fetch(`/api/posts/post`, {\n                method: 'post',\n                body: JSON.stringify({ title, description, name }),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token.token}`\n                }\n            })\n            const body = await response.json();\n            \n            if (body.status === \"Success\") {\n                alert(\"Post Successful\");\n                setPostValues({ title: \"\", description: \"\", name: token.uname });\n            } else {\n                alert(\"Post Unsuccessful!\");\n            }\n            \n        } else {\n            alert(\"Enter all required fields.\");\n        }\n    }\n    if(!token.admin) return <ErrorPage />\n    return (\n        <div className=\"blogPost\">\n            <div className=\"addComment\">\n                <h3 className='commentHeading'>Add a Blog Post</h3>\n                <label>\n                    Title:\n                    <br></br>\n                    <input type=\"text\" className=\"titleTextBox\" name=\"title\" value={postValues.title} onChange={handleChange} />\n                </label>\n                <br></br>\n                <label>\n                    Description:\n                    <br />\n                    <textarea rows=\"20\" cols=\"100\" name=\"description\" value={postValues.description} onChange={handleChange} ></textarea>\n                </label>\n                <br></br>\n                <button onClick={fetchPost}>Submit</button>\n            </div>\n        </div>\n    );\n};\n\nexport default AddPost;"]},"metadata":{},"sourceType":"module"}