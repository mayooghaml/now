{"ast":null,"code":"var _jsxFileName = \"E:\\\\now\\\\MERN-Assignment-frontend-main\\\\src\\\\components\\\\article\\\\PreLoader.js\";\nimport React from 'react';\nimport \"./Article.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Preloader = _ref => {\n  let {\n    loading\n  } = _ref;\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cover\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c = Preloader;\nexport default Preloader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preloader\");","map":{"version":3,"sources":["E:/now/MERN-Assignment-frontend-main/src/components/article/PreLoader.js"],"names":["React","Preloader","loading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;;;AAEA,MAAMC,SAAS,GAAG,QAAe;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;;AAC7B,MAAIA,OAAJ,EAAa;AACT,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAQH,GATD,MASO;AACH,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AACJ,CAfD;;KAAMD,S;AAiBN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport \"./Article.css\";\n\nconst Preloader = ({loading}) => {\n    if (loading) {\n        return (\n            <>\n                <div className=\"cover\">\n                    <div className=\"spinner\">\n                    </div>\n                </div>\n            </>\n        );\n    } else {\n        return (\n            <div></div>\n        );\n    }\n};\n\nexport default Preloader;"]},"metadata":{},"sourceType":"module"}