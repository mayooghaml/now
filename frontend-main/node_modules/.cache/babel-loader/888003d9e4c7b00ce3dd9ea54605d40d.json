{"ast":null,"code":"var _jsxFileName = \"E:\\\\now\\\\MERN-Assignment-frontend-main\\\\src\\\\components\\\\article\\\\Upvote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport useToken from '../userAccounts/useToken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upvote = props => {\n  _s();\n\n  const {\n    id,\n    upvoters,\n    setArticleData\n  } = props;\n  const {\n    token\n  } = useToken();\n  const [voteValues, setVoteValues] = useState({\n    vote: 0,\n    disabled: false\n  });\n  useEffect(() => {\n    if (upvoters) {\n      let upvotes = upvoters.length;\n      let disabled = false;\n      let voted = upvoters.find(name => name === token.uname);\n      if (voted) disabled = true;\n      setVoteValues({\n        vote: upvotes,\n        disabled: disabled\n      });\n    }\n  }, [upvoters]);\n\n  async function fetchUpVotes() {\n    const username = token.uname;\n    const response = await fetch(`/api/comments/${id}/upvotes`, {\n      method: 'post',\n      body: JSON.stringify({\n        username\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token.token}`\n      }\n    });\n    const body = await response.json();\n    setArticleData(body);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"like\",\n      onClick: fetchUpVotes,\n      disabled: voteValues.disabled,\n      children: \"\\uD83D\\uDC4D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"votes\",\n      children: [\"This article has \", voteValues.vote, \" upvotes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Upvote, \"iF0DMcd+g2mXMoO1ShhnMOtOD88=\", false, function () {\n  return [useToken];\n});\n\n_c = Upvote;\nexport default Upvote;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upvote\");","map":{"version":3,"sources":["E:/now/MERN-Assignment-frontend-main/src/components/article/Upvote.js"],"names":["React","useEffect","useState","useToken","Upvote","props","id","upvoters","setArticleData","token","voteValues","setVoteValues","vote","disabled","upvotes","length","voted","find","name","uname","fetchUpVotes","username","response","fetch","method","body","JSON","stringify","headers","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,QAAN;AAAgBC,IAAAA;AAAhB,MAAmCH,KAAzC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYN,QAAQ,EAA1B;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,QAAQ,EAAE;AAArB,GAAD,CAA5C;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,QAAJ,EAAc;AACV,UAAIO,OAAO,GAAGP,QAAQ,CAACQ,MAAvB;AACA,UAAIF,QAAQ,GAAG,KAAf;AACA,UAAIG,KAAK,GAAGT,QAAQ,CAACU,IAAT,CAAeC,IAAD,IAAUA,IAAI,KAAKT,KAAK,CAACU,KAAvC,CAAZ;AACA,UAAIH,KAAJ,EACIH,QAAQ,GAAG,IAAX;AACJF,MAAAA,aAAa,CAAC;AAAEC,QAAAA,IAAI,EAAEE,OAAR;AAAiBD,QAAAA,QAAQ,EAAEA;AAA3B,OAAD,CAAb;AACH;AACJ,GATQ,EASN,CAACN,QAAD,CATM,CAAT;;AAWA,iBAAea,YAAf,GAA8B;AAC1B,UAAMC,QAAQ,GAAGZ,KAAK,CAACU,KAAvB;AACA,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,iBAAgBjB,EAAG,UAArB,EAAgC;AACxDkB,MAAAA,MAAM,EAAE,MADgD;AAExDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,QAAAA;AAAF,OAAf,CAFkD;AAGxDO,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,UAASnB,KAAK,CAACA,KAAM;AAFlC;AAH+C,KAAhC,CAA5B;AASA,UAAMgB,IAAI,GAAG,MAAMH,QAAQ,CAACO,IAAT,EAAnB;AACArB,IAAAA,cAAc,CAACiB,IAAD,CAAd;AACH;;AAED,sBACI;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,OAAO,EAAEL,YAAlC;AAAgD,MAAA,QAAQ,EAAEV,UAAU,CAACG,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA,sCAAuCH,UAAU,CAACE,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CArCD;;GAAMR,M;UAEgBD,Q;;;KAFhBC,M;AAuCN,eAAeA,MAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport useToken from '../userAccounts/useToken';\n\nconst Upvote = (props) => {\n    const { id, upvoters, setArticleData } = props;\n    const { token } = useToken();\n    const [voteValues, setVoteValues] = useState({ vote: 0, disabled: false });\n\n    useEffect(() => {\n        if (upvoters) {\n            let upvotes = upvoters.length;\n            let disabled = false;\n            let voted = upvoters.find((name) => name === token.uname);\n            if (voted)\n                disabled = true;\n            setVoteValues({ vote: upvotes, disabled: disabled });\n        }\n    }, [upvoters]);\n    \n    async function fetchUpVotes() {\n        const username = token.uname;\n        const response = await fetch(`/api/comments/${id}/upvotes`, {\n            method: 'post',\n            body: JSON.stringify({ username }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token.token}`\n            }\n            \n        });\n        const body = await response.json();\n        setArticleData(body);\n    }\n\n    return (\n        <div>\n            <button className=\"like\" onClick={fetchUpVotes} disabled={voteValues.disabled}>üëç</button>\n            <p className=\"votes\">This article has {voteValues.vote} upvotes</p>\n        </div>\n    );\n}\n\nexport default Upvote;\n\n\n"]},"metadata":{},"sourceType":"module"}