{"ast":null,"code":"export const validateSignup = formValues => {\n  const errors = {};\n  const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n  if (!formValues.username) {\n    errors.username = \"Username is required\";\n  }\n\n  if (!formValues.email) {\n    errors.email = \"Email is required\";\n  } else if (!regex.test(formValues.email)) {\n    errors.email = \"Email is invalid\";\n  }\n\n  if (!formValues.password) {\n    errors.password = \"Password is required\";\n  } else if (formValues.password.length < 5) {\n    errors.password = \"Password is too short\";\n  } else if (formValues.password !== formValues.retypePsw) {\n    errors.password = \"Passwords must match\";\n  }\n\n  return errors;\n};\nexport const validateLogin = formValues => {\n  const errors = {};\n\n  if (!formValues.username) {\n    errors.username = \"Username is required\";\n  }\n\n  if (!formValues.password) {\n    errors.password = \"Password is required\";\n  }\n\n  return errors;\n};","map":{"version":3,"sources":["E:/now/MERN-Assignment-frontend-main/src/components/userAccounts/validateForms.js"],"names":["validateSignup","formValues","errors","regex","username","email","test","password","length","retypePsw","validateLogin"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAIC,UAAD,IAAgB;AAC1C,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,KAAK,GAAG,gCAAd;;AAEA,MAAI,CAACF,UAAU,CAACG,QAAhB,EAA0B;AACtBF,IAAAA,MAAM,CAACE,QAAP,GAAkB,sBAAlB;AACH;;AACD,MAAI,CAACH,UAAU,CAACI,KAAhB,EAAuB;AACnBH,IAAAA,MAAM,CAACG,KAAP,GAAe,mBAAf;AACH,GAFD,MAEO,IAAI,CAACF,KAAK,CAACG,IAAN,CAAWL,UAAU,CAACI,KAAtB,CAAL,EAAmC;AACtCH,IAAAA,MAAM,CAACG,KAAP,GAAe,kBAAf;AACH;;AACD,MAAI,CAACJ,UAAU,CAACM,QAAhB,EAA0B;AACtBL,IAAAA,MAAM,CAACK,QAAP,GAAkB,sBAAlB;AACH,GAFD,MAEO,IAAIN,UAAU,CAACM,QAAX,CAAoBC,MAApB,GAA6B,CAAjC,EAAoC;AACvCN,IAAAA,MAAM,CAACK,QAAP,GAAkB,uBAAlB;AACH,GAFM,MAEA,IAAIN,UAAU,CAACM,QAAX,KAAwBN,UAAU,CAACQ,SAAvC,EAAkD;AACrDP,IAAAA,MAAM,CAACK,QAAP,GAAkB,sBAAlB;AACH;;AAED,SAAOL,MAAP;AACH,CArBM;AAuBP,OAAO,MAAMQ,aAAa,GAAIT,UAAD,IAAgB;AACzC,QAAMC,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACD,UAAU,CAACG,QAAhB,EAA0B;AACtBF,IAAAA,MAAM,CAACE,QAAP,GAAkB,sBAAlB;AACH;;AACD,MAAI,CAACH,UAAU,CAACM,QAAhB,EAA0B;AACtBL,IAAAA,MAAM,CAACK,QAAP,GAAkB,sBAAlB;AACH;;AAED,SAAOL,MAAP;AACH,CAXM","sourcesContent":["export const validateSignup = (formValues) => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    if (!formValues.username) {\n        errors.username = \"Username is required\";\n    }\n    if (!formValues.email) {\n        errors.email = \"Email is required\";\n    } else if (!regex.test(formValues.email)) {\n        errors.email = \"Email is invalid\";\n    }\n    if (!formValues.password) {\n        errors.password = \"Password is required\";\n    } else if (formValues.password.length < 5) {\n        errors.password = \"Password is too short\";\n    } else if (formValues.password !== formValues.retypePsw) {\n        errors.password = \"Passwords must match\";\n    }\n\n    return errors;\n}\n\nexport const validateLogin = (formValues) => {\n    const errors = {};\n\n    if (!formValues.username) {\n        errors.username = \"Username is required\";\n    }\n    if (!formValues.password) {\n        errors.password = \"Password is required\";\n    }\n\n    return errors;\n}\n\n"]},"metadata":{},"sourceType":"module"}